apiVersion: teiid.io/v1alpha1
kind: VirtualDatabase
metadata:
  name: mysql-postgresql-federation
spec:
  replicas: 1
  env:
    - name: SPRING_DATASOURCE_SAMPLEDB_USERNAME
      value: user
    - name: SPRING_DATASOURCE_SAMPLEDB_PASSWORD
      value: mypassword
    - name: SPRING_DATASOURCE_SAMPLEDB_DATABASENAME
      value: sampledb
    - name: SPRING_DATASOURCE_SAMPLEDB_JDBCURL
      value: 'jdbc:mysql://mysql/$(SPRING_DATASOURCE_SAMPLEDB_DATABASENAME)?user=$(SPRING_DATASOURCE_SAMPLEDB_USERNAME)&password=$(SPRING_DATASOURCE_SAMPLEDB_PASSWORD)&autoReconnect=true&useSSL=false'
    - name: SPRING_DATASOURCE_SAMPLEDB2_USERNAME
      value: user
    - name: SPRING_DATASOURCE_SAMPLEDB2_PASSWORD
      value: mypassword
    - name: SPRING_DATASOURCE_SAMPLEDB2_DATABASENAME
      value: sampledb
    - name: SPRING_DATASOURCE_SAMPLEDB2_JDBCURL
      value: 'jdbc:postgresql://postgresql/$(SPRING_DATASOURCE_SAMPLEDB2_DATABASENAME)'
  build:
    source:
      ddl: >
        CREATE DATABASE customer OPTIONS (ANNOTATION 'Customer VDB');

        USE DATABASE customer;

        CREATE FOREIGN DATA WRAPPER mysql;
        CREATE FOREIGN DATA WRAPPER postgresql;

        CREATE SERVER mysqldb TYPE 'mysql' FOREIGN DATA WRAPPER mysql;
        CREATE SERVER postgresqldb TYPE 'NONE' FOREIGN DATA WRAPPER postgresql;

        CREATE SCHEMA mysqlorders SERVER mysqldb;
        CREATE SCHEMA postgresqlcustomers SERVER postgresqldb;
        CREATE VIRTUAL SCHEMA portfoliofederation;

        SET SCHEMA mysqlorders;

        IMPORT FOREIGN SCHEMA public FROM SERVER mysqldb INTO mysqlorders
        OPTIONS("importer.useFullSchemaName" 'false');

        SET SCHEMA postgresqlcustomers;

        IMPORT FOREIGN SCHEMA public FROM SERVER postgresqldb INTO postgresqlcustomers
        OPTIONS("importer.useFullSchemaName" 'false');

        SET SCHEMA portfoliofederation;

        CREATE VIEW MyOrders(id bigint PRIMARY KEY, name string) AS
            SELECT id, name
            FROM mysqlorders.ORDERS;

        CREATE VIEW CustomerZip(id bigint PRIMARY KEY, name string, ssn string,
        zip string) AS
            SELECT c.ID as id, c.NAME as name, c.SSN as ssn, a.ZIP as zip
            FROM postgresqlcustomers.CUSTOMER c LEFT OUTER JOIN postgresqlcustomers.ADDRESS a
            ON c.ID = a.CUSTOMER_ID;

        CREATE VIEW CustomerOrders(id bigint PRIMARY KEY, name string) AS
            SELECT c.ID as id, o.name as name
            FROM postgresqlcustomers.CUSTOMER c LEFT OUTER JOIN mysqlorders.ORDERS o
            ON c.ID = o.id;