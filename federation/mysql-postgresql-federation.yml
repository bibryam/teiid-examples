apiVersion: teiid.io/v1alpha1
kind: VirtualDatabase
metadata:
  name: mysql-postgresql-federation
spec:
  replicas: 1
  env:
    - name: SPRING_DATASOURCE_SAMPLEDB_USERNAME
      value: user
    - name: SPRING_DATASOURCE_SAMPLEDB_PASSWORD
      value: mypassword
    - name: SPRING_DATASOURCE_SAMPLEDB_DATABASENAME
      value: sampledb
    - name: SPRING_DATASOURCE_SAMPLEDB_JDBCURL
      value: 'jdbc:mysql://mysql/$(SPRING_DATASOURCE_SAMPLEDB_DATABASENAME)?user=$(SPRING_DATASOURCE_SAMPLEDB_USERNAME)&password=$(SPRING_DATASOURCE_SAMPLEDB_PASSWORD)&autoReconnect=true&useSSL=false'
    - name: SPRING_DATASOURCE_SAMPLEDB2_USERNAME
      value: user
    - name: SPRING_DATASOURCE_SAMPLEDB2_PASSWORD
      value: mypassword
    - name: SPRING_DATASOURCE_SAMPLEDB2_DATABASENAME
      value: sampledb
    - name: SPRING_DATASOURCE_SAMPLEDB2_JDBCURL
      value: 'jdbc:postgresql://postgresql/$(SPRING_DATASOURCE_SAMPLEDB_DATABASENAME)'
  build:
    source:
      ddl: >
        CREATE DATABASE customer OPTIONS (ANNOTATION 'Customer VDB');

        USE DATABASE customer;

        CREATE FOREIGN DATA WRAPPER mysql;
        CREATE FOREIGN DATA WRAPPER postgresql;

        CREATE SERVER sampledb TYPE 'mysql' FOREIGN DATA WRAPPER mysql;
        CREATE SERVER sampledb2 TYPE 'NONE' FOREIGN DATA WRAPPER postgresql;

        CREATE SCHEMA accounts SERVER sampledb;
        CREATE SCHEMA accounts2 SERVER sampledb2;
        CREATE VIRTUAL SCHEMA portfolio;

        SET SCHEMA accounts;

        IMPORT FOREIGN SCHEMA public FROM SERVER sampledb INTO accounts
        OPTIONS("importer.useFullSchemaName" 'false');

        SET SCHEMA accounts2;

        IMPORT FOREIGN SCHEMA public FROM SERVER sampledb2 INTO accounts2
        OPTIONS("importer.useFullSchemaName" 'false');

        SET SCHEMA portfolio;

        CREATE VIEW MyOrders(id bigint PRIMARY KEY, name string) AS
            SELECT id, name
            FROM accounts.ORDERS;

        CREATE VIEW CustomerZip(id bigint PRIMARY KEY, name string, ssn string,
        zip string) AS
            SELECT c.ID as id, c.NAME as name, c.SSN as ssn, a.ZIP as zip
            FROM accounts2.CUSTOMER c LEFT OUTER JOIN accounts2.ADDRESS a
            ON c.ID = a.CUSTOMER_ID;

        CREATE VIEW Federation(id bigint PRIMARY KEY, name string) AS
            SELECT c.ID as id, o.name as name
            FROM accounts2.CUSTOMER c LEFT OUTER JOIN accounts.ORDERS o
            ON c.ID = o.id;

